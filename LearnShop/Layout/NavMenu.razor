@using LearnShop.ClientServices.Auth
@using LearnShop.Components
@using LearnShop.Model.Enums
@using LearnShop.Model.Users
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService

<div class="z-10 flex flex-col w-full">
    <nav class="flex flex-row w-full justify-between items-center p-[1rem] bg-primary">
        <div>
            <CartWithBadge/>
        </div>
        <a href="/">
            <div class="font-bold text-[1.5rem] md:text-[2rem]">
                <h1 class="text-[#76be11]">Learn<span class="text-white">Shop</span></h1>
            </div>
        </a>

        <div class="flex flex-row gap-4">
            <button @onclick="TrocarEstadoMenu" type="button" id="botao-menu"
                    class="text-sm text-white rounded-lg md:hidden">
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                     viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M1 1h15M1 7h15M1 13h15"/>
                </svg>
            </button>

            <div class="hidden md:flex flex-row text-white font-bold text-[0.9rem] gap-1">
                @if (_isLogado && _currentUser.Role == Role.Admin)
                {
                    <Button Text="Ebook" Icon="add" TextColor="#FFF" BackgroundColor="#151773"
                            HoverBackgroundColor="#23238a" Size="md" Width="min-w-[125px]"
                            PreventDefaultStatus=true
                            OnClick="@(() => NavigateTo("/cadastrar/ebook"))"/>
                }
                
                @if (_isLogado && _currentUser != null)
                {
                    <div class="flex flex-col items-start gap-1">
                        <a href="/perfil" class="hover:text-highlight transition-colors">
                            <h1>Olá,
                                <span class="text-highlight cursor-pointer">
                                    @_currentUser.Username
                                </span></h1>
                        </a>
                        <button @onclick="Logout"
                                class="align-items-end cursor-pointer hover:text-highlight transition-colors">
                            Sair
                        </button>
                    </div>
                }
                else
                {
                    <div class="flex flex-col gap-0 items-end text-white font-bold text-[0.8rem]">
                        <a href="/login" class="transition-colors">
                            <span class="cursor-pointer hover:text-green-400 transition-colors">Entre</span>
                        </a>
                        <a href="/cadastrar/usuario" class="transition-colors">
                            <span class="cursor-pointer hover:text-green-400 transition-colors">Cadastre-se</span>
                        </a>
                    </div>
                }
            </div>
        </div>
    </nav>
    <SearchBox/>
    <div class="@(_menuAberto ? "" : "hidden") absolute top-[8.8rem] left-0 w-full z-50">
        <div class=" bg-primary text-white h-[3rem] flex items-center justify-center w-full">
            <h1 class="">Categorias</h1>
        </div>
        <div class="flex flex-col w-full text-white ">
            <ul class="flex flex-col gap-3 justify-center items-center p-[1rem] bg-secondary text-[0.9rem]">
                <li class="p-2 cursor-pointer hover:bg-blue-800 rounded-lg"
                    @onclick="@(() => NavigateTo("/categoria/Algoritmos"))">Algoritmos
                </li>
                <li class="p-2 cursor-pointer hover:bg-blue-800 rounded-lg"
                    @onclick="@(() => NavigateTo("/categoria/Banco-de-Dados"))">Banco de Dados
                </li>
                <li class="p-2 cursor-pointer hover:bg-blue-800 rounded-lg"
                    @onclick="@(() => NavigateTo("/categoria/Desenvolvimento-Web"))">Desenvolvimento Web
                </li>
                <li class="p-2 cursor-pointer hover:bg-blue-800 rounded-lg"
                    @onclick="@(() => NavigateTo("/categoria/Desenvolvimento-Mobile"))">Desenvolvimento Mobile
                </li>
                <li class="p-2 cursor-pointer hover:bg-blue-800 rounded-lg"
                    @onclick="@(() => NavigateTo("/categoria/Engenharia-de-Software"))">Engenharia de Software
                </li>
            </ul>
        </div>

        @if (_isLogado && _currentUser.Role == Role.Admin)
        {
            <div class="bg-secondary flex justify-center p-4">
                <Button Text="Cadastrar E-book" Icon="add" TextColor="#FFF" BackgroundColor="#151773"
                        HoverBackgroundColor="#23238a" Size="md" Width="w-full max-w-[200px]"
                        PreventDefaultStatus=true
                        OnClick="@(() => NavigateTo("/cadastrar/ebook"))"/>
            </div>
        }

        <div
            class=" @(!_isLogado ? "" : "hidden") bg-primary flex flex-col gap-[0.7rem] justify-center items-center p-[1rem] w-full text-white p-[1rem]">
            <button class="bg-highlight w-full cursor-pointer rounded-[0.5rem] text-black"
                    @onclick="@(() => NavigateTo("/login"))">
                ENTRAR
            </button>
            <h1 class="text-[0.9rem] cursor-pointer"
                @onclick="@(() => NavigateTo("/cadastrar/usuario"))">
                CADASTRE-SE
            </h1>
        </div>

        <div
            class="@(_isLogado ? "" : "hidden") bg-primary flex flex-col gap-[0.7rem] justify-center items-center p-[1rem] w-full text-white p-[1rem]">
            <div class="flex flex-row justify-between w-full">
                <a @onclick="@(() => NavigateTo("/perfil"))">
                    <h1 class="text-[1.2rem] border-b">
                        <span class="mr-1 material-icons">person</span>Olá, @(_currentUser?.Username!)
                    </h1>
                </a>
                <a @onclick="@(() => NavigateTo("/pedidos"))"
                   class="cursor-pointer text-[1.2rem] text-highlight border-b">Meus
                    Livros</a>
            </div>
            <button class="bg-highlight w-full rounded-[0.5rem] text-black" @onclick="@(Logout)">
                SAIR
            </button>
        </div>
    </div>
    <div class="flex-col hidden text-white md:flex bg-primary">
        <ul class="flex flex-row gap-3 justify-around items-center p-[0.7rem]  text-[1.2rem]">
            <li class="p-2 cursor-pointer hover:bg-blue-700 rounded-lg"
                @onclick="@(() => NavigateTo("/categoria/Algoritmos"))">Algoritmos
            </li>
            <li class="p-2 cursor-pointer hover:bg-blue-700 rounded-lg"
                @onclick="@(() => NavigateTo("/categoria/Banco-de-Dados"))">Banco de Dados
            </li>
            <li class="p-2 cursor-pointer hover:bg-blue-700 rounded-lg"
                @onclick="@(() => NavigateTo("/categoria/Desenvolvimento-Web"))">Desenvolvimento Web
            </li>
            <li class="p-2 cursor-pointer hover:bg-blue-700 rounded-lg"
                @onclick="@(() => NavigateTo("/categoria/Desenvolvimento-Mobile"))">Desenvolvimento Mobile
            </li>
            <li class="p-2 cursor-pointer hover:bg-blue-700 rounded-lg"
                @onclick="@(() => NavigateTo("/categoria/Engenharia-de-Software"))">Engenharia de Software
            </li>
        </ul>
    </div>
</div>

@code {
    private bool _menuAberto = false;
    private UserInfo? _currentUser;
    private bool _isLogado = false;

    protected override async Task OnInitializedAsync()
    {
        _currentUser = await AuthService.GetCurrentUserAsync();
        _isLogado = _currentUser != null;
    }

    private void TrocarEstadoMenu()
    {
        _menuAberto = !_menuAberto;
    }

    private void NavigateTo(string url)
    {
        _menuAberto = false;
        NavigationManager.NavigateTo(url);
    }

    private async Task Logout()
    {
        _menuAberto = false;
        await AuthService.LogoutAsync();
        _currentUser = await AuthService.GetCurrentUserAsync();
        _isLogado = _currentUser != null;
        StateHasChanged();
        NavigationManager.NavigateTo("/login");
    }

}