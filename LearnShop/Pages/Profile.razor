@page "/perfil"
@using LearnShop.ClientServices.Auth
@using LearnShop.Model.Users
@inject NavigationManager Navigation
@inject AuthenticationService AuthService

<PageTitle>Meu perfil</PageTitle>

<PageHeader
    Title="MEU PERFIL"
    TextSize="2xl"
/>

<div class="conteiner flex flex-col items-center justify-center container px-3 py-4 mx-auto">
    <div class="flex flex-col justify-center rounded-2xl w-[90vw] h-[60vh] bg-gray-200 md:w-[40vw] md:h-[75vh]">
        <div class="flex flex-col items-center justify-center ">
            <div class="cursor-pointer w-64 h-25 m-6 pl-3 hover:bg-gradient-to-br from-green-600 to-blue-700 border border-black rounded-md text-black font-medium flex items-center"
            @onclick="GoToProfileEdit">
                <span class="mr-2 text-sm material-icons">person</span>Meu cadastro
            </div>

            <div class="cursor-pointer w-64 h-25 m-6 pl-3 hover:bg-gradient-to-br from-green-600 to-blue-700 border border-black rounded-md text-black font-medium flex items-center space-x-1"
            @onclick="GoToOrderList">
                <span class="mr-2 text-sm material-icons">shopping_cart</span>Meus pedidos
            </div>

            <div class="cursor-pointer w-64 h-25 m-6 pl-3 hover:bg-gradient-to-br from-green-600 to-blue-700 border border-black rounded-md text-black font-medium flex items-center space-x-2"
            @onclick="Logout">
                <span class="mr-2 text-sm material-icons">person_remove</span>Sair
            </div>
        </div>
    </div>    
</div>    

@code {
    private UserInfo? _currentUser;
    private bool _isLogado = false;
    
    protected override async Task OnInitializedAsync()
    {
        _currentUser = await AuthService.GetCurrentUserAsync();
        _isLogado = _currentUser != null;
    }
    
    private void GoToProfileEdit()
    {
        Navigation.NavigateTo("/perfil/editar");
    }

    private void GoToOrderList()
    {
        Navigation.NavigateTo("/pedidos");
    }
    
    private void NavigateTo(string url)
    {
        Navigation.NavigateTo(url);
    }
    
    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        _currentUser = await AuthService.GetCurrentUserAsync();
        _isLogado = _currentUser != null;
        StateHasChanged();
        Navigation.NavigateTo("/login", true);
    }
}