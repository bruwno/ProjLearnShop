@page "/pedidos"
@using LearnShop.ClientServices.Auth
@using LearnShop.ClientServices.Interfaces
@using LearnShop.Model.Sales
@using LearnShop.Model.Users
@inject IOrderService OrderService
@inject NavigationManager Navigation
@inject AuthenticationService AuthService

<PageTitle>Pedidos</PageTitle>

<PageHeader Title="MEUS PEDIDOS" TextSize="2xl" />

<div class="container flex flex-col items-center justify-center gap-3 px-3 py-4 mx-auto">
    @if (isLoading)
    {
        <Loading/>
    }
    else if (orders == null || !orders.Any())
    {
        <p>Nenhum pedido encontrado.</p>
    }
    else
    {
    <div class="flex flex-col items-center justify-center w-full p-5 m-1 font-bold text-black bg-white rounded-lg shadow-md space-y-4">
            @foreach (var order in orders)
            {
                <div class="cursor-pointer border rounded-lg p-4 shadow-sm w-[80vw]  md:w-[50vw] bg-gradient-to-br from-blue-400 to-green-600"
                    @onclick="GoToOrderDetails">
                    <div class="flex justify-between items-center text-[0.9rem] md:text-[1.3rem]">
                        <div>
                            <h3 class="font-bold">Pedido: @order.Id - @order.CreatedAt.ToString("dd/MM/yyyy")</h3>
                        </div>
                        <Button Text="Baixar PDF" 
                                Icon="download" 
                                TextColor="#FFF" 
                                BackgroundColor="#151773"
                                HoverBackgroundColor="#23238a" 
                                Size="sm" 
                                Width="min-w-[110px]"
                                PreventDefaultStatus=true
                                OnClick="@(()=>{})" />
                </div>
            </div>
        }
    </div>
    <div class="mt-6">
                        <Button Text="Ver mais" 
                                Icon="arrow_drop_down" 
                                TextColor="#FFF" 
                                BackgroundColor="#151773"
                                HoverBackgroundColor="#23238a" 
                                Size="md" 
                                Width="min-w-[125px]"
                                PreventDefaultStatus=true
                                OnClick="@(()=>{})" />
    </div>
}
</div>

@code {
    private UserInfo _currentUser;
    
    private List<Order>? orders;
    private bool isLoading = true;
    
    protected override async Task OnInitializedAsync()
    {
        if (!await AuthService.IsAuthenticatedAsync())
        {
            Navigation.NavigateTo("/login");
            return;
        }

        _currentUser = await AuthService.GetCurrentUserAsync();
        
        isLoading = true;
        orders = await OrderService.GetOrdersAsync();
        isLoading = false;
    }
    
    private void GoToOrderDetails(){
        Navigation.NavigateTo("/detalhes-pedido");
    }

    private void NavigateTo(string url)
    {
        Navigation.NavigateTo(url);
    }
    
    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}