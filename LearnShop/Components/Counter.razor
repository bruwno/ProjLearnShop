@inherits ComponentBase

<div class="flex flex-col items-center justify-center w-full h-full p-1 bg-white rounded-lg shadow-md">
    <form class="max-w-xs mx-auto text-center" id="quantity-form">
        <label for="quantity-input" class="block mb-1 text-sm font-medium text-gray-900">Quantidade</label>
        <div class="relative flex items-center max-w-[8rem]">
            
            <button type="button" id="decrement-button" @onclick="DecrementQuantity"
                class="p-3 bg-gray-100 border border-gray-300 hover:bg-gray-200 rounded-s-lg h-11 focus:ring-gray-100 focus:ring-2 focus:outline-none">
                <svg class="w-3 h-3 text-gray-900" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h16"/>
                </svg>
            </button>
            
            <input type="text" id="quantity-input" data-input-counter data-input-counter-min="1" data-input-counter-max="50" aria-describedby="helper-text-explanation" class="bg-gray-50 font-bold border-x-0 border-gray-300 h-11 text-center text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full py-2.5" placeholder="999" value="@quantity" required />

            <button type="button" id="increment-button" @onclick="IncrementQuantity"
                class="p-3 bg-gray-100 border border-gray-300 hover:bg-gray-200 rounded-e-lg h-11 focus:ring-gray-100 focus:ring-2 focus:outline-none">
                <svg class="w-3 h-3 text-gray-900" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 1v16M1 9h16"/>
                </svg>
            </button>
            
        </div>
    </form>
</div>

@code {
    [Parameter]
    public EventCallback<int> QuantityChanged { get; set; }

    private int quantity = 1;

    private async Task OnInputChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var value))
        {
            quantity = Math.Clamp(value, 1, 50);
            await QuantityChanged.InvokeAsync(quantity);
        }
    }
    
    private async Task IncrementQuantity()
    {
        if (quantity < 50)
        {
            quantity++;
            await QuantityChanged.InvokeAsync(quantity);
        }
    }

    private async Task DecrementQuantity()
    {
        if (quantity > 1)
        {
            quantity--;
            await QuantityChanged.InvokeAsync(quantity);
        }
    }
}